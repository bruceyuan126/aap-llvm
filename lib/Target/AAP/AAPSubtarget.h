//===-- AAPSubtarget.h - Define Subtarget for the AAP -----------*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This file declares the AAP specific subclass of TargetSubtargetInfo.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_AAP_AAP_SUBTARGET_H
#define LLVM_LIB_TARGET_AAP_AAP_SUBTARGET_H

#include "AAPFrameLowering.h"
#include "AAPISelLowering.h"
#include "AAPInstrInfo.h"
#include "AAPRegisterInfo.h"
#include "llvm/CodeGen/SelectionDAGTargetInfo.h"
#include "llvm/CodeGen/TargetSubtargetInfo.h"

#define GET_SUBTARGETINFO_HEADER
#include "AAPGenSubtargetInfo.inc"

namespace llvm {
class AAPSubtarget : public AAPGenSubtargetInfo {
  virtual void anchor();
  AAPFrameLowering FrameLowering;
  AAPInstrInfo InstrInfo;
  AAPRegisterInfo RegInfo;
  AAPTargetLowering TLInfo;
  SelectionDAGTargetInfo TSInfo;


public:
  /// This constructor initializes the data members to match that
  /// of the specified triple.
  AAPSubtarget(const Triple &TT, const std::string &CPU, const std::string &FS,
               const TargetMachine &TM);

  /// ParseSubtargetFeatures - Parses features string setting specified
  /// subtarget options.  Definition of function is auto generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef FS);

  const AAPFrameLowering *getFrameLowering() const override {
    return &FrameLowering;
  }
  const AAPInstrInfo *getInstrInfo() const override { return &InstrInfo; }
  const TargetRegisterInfo *getRegisterInfo() const override {
    return &RegInfo;
  }
  const AAPTargetLowering *getTargetLowering() const override {
    return &TLInfo;
  }
  const SelectionDAGTargetInfo *getSelectionDAGInfo() const override {
    return &TSInfo;
  }
};
} // namespace llvm

#endif
