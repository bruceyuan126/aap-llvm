//= AAPInstPrinter.h - Convert AAP MCInst to assembly syntax -------*- C++ -*-//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This class prints an AAP MCInst to a .s file.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_AAP_INSTPRINTER_AAPINSTPRINTER_H
#define LLVM_LIB_TARGET_AAP_INSTPRINTER_AAPINSTPRINTER_H

#include "llvm/MC/MCInstPrinter.h"

namespace llvm {
class MCOperand;

class AAPInstPrinter : public MCInstPrinter {
public:
  AAPInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                 const MCRegisterInfo &MRI)
      : MCInstPrinter(MAI, MII, MRI) {}

  void printInst(const MCInst *MI, raw_ostream &O, StringRef Annot,
                 const MCSubtargetInfo &STI) override;

  // Autogenerated by tblgen.
  void printInstruction(const MCInst *MI, raw_ostream &O);
  static const char *getRegisterName(unsigned RegNo);

  void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O,
                    const char *Modifier = nullptr);

  void printPCRelImmOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O,
                            const char *Modifier = nullptr);

  void printMemSrcOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O,
                          const char *Modifier = nullptr,
                          bool WithPreDec = false, bool WithPostInc = false);

  void printMemSrcPostIncOperand(const MCInst *MI, unsigned OpNo,
                                 raw_ostream &O,
                                 const char *Modifier = nullptr);

  void printMemSrcPreDecOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O,
                                const char *Modifier = nullptr);

private:
  void printRegister(unsigned RegNo, raw_ostream &O) const;
};
} // namespace llvm

#endif
